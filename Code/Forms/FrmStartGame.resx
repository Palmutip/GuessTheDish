<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIABVHgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAAAFv
        ck5UAc+id5oAAB4PSURBVHja7V0HnFNlEp9dOgsCSxHBQ7EriKhYEBDEhjRFUcFyHqeehSYWlAMBBbGB
        eKCoyCkgFkBA2imo2AseByhI77DZ3pMsnHpz87Ism2/eyyYv+V422czMz995SJL3Zv7ffDPzzcwHICQk
        JCQkJCQkJCQkJCQkJCQkJCQkJCQkVHUoGVIgFZrDqXAhdIbu0AN60T9XwuVwMZwBLaAJ1IfqIqaqRnVI
        5RfDQHgcXoWl8ANsgzTIhjwogCIopn8K6N9zwAW7YB2shJkwFgYRPE4kMAjFueJPhr4wDhbAJlJwCWDI
        /F+CxA4CwwswAM4SIMQf1YeL4BFS/E5w21C7FZfAQVhFNqErNBaxxgPVgvPhMfgEMuF/Eape5Tz4HiZC
        JzhORBy71BxuhXfgkGbV+3MOWYMHaGMRijFKIr/+Ufi3rX0+XP4NNsMEsjMSLcSM8tvA07AV/rCjxiSs
        gbWwNtYhrkX/nmwXBgfhWQoahSqdTiEvf1coKquFqXgyXor98B58FCfiVHwF38BZOBNfxZfxGXwc78eb
        sQuehk0IGCF84/9gCtQUBVQmNYWh8HOwHT+FVNqbVD4Lv8AtuBddmIU5mI2ZmIHpxziDOI3+61bcgJ8S
        MEYSUM7C44JZgTaihMqiGnAtrKZ4vQIj3xS74xP4ISk1E91Ygl700P+6sRiLiAsxj4CQSYBIw0NHOc3H
        Lh8k9uB6XIhj8Fo8AatZ/0YR9BBFVJbhf4k88oDKb0Sqn4BfkSrdR9VeHIANIOQTEDL8YFAOBgMIO3EN
        Poc9CE6m38mE9v0IBdmij6hSdegDawOpvhqegYPxY1Keh1QfWPFmIBRYwuDQUYuwE1fiI3guuYvlv9Wz
        4JeH3Y3TCAcZopWoUTMKwQKs/RrYAZ/HTbSm7ahehUE+eQfpJhAc8lmDNFyHk8lNbEAOZQPsi9+h6zfX
        Z+k986pnkB3IEd1EgdrBcutwrzp2JK9+F617T1iq9+dCzCVbcMiCXcRbcBH90oe47ai1SMt1Tc1svZ82
        gm9FP45SMvQmn9/S3WtDK1+P8sttQV4AEKQdjRv8N4u0n9L7FFZbaTxlHd+RspB2qgWDaau1UH9zCtk2
        kcnXp/xyEORabgeWsMhJn/BtC/JOFsA6+Bf8FVJEZTopBZ6EYrPya2JP/IRMtn7l+4PAFRoEfh+/lvzB
        0ifzUpTSSNSmixrDNDhsVn9LfBYPksNX7DAXYpZFdMA3hp/xQvXEYBYcL6rTo/5Z8Lt5378CV9H6dDuu
        /lLOC7IZuCj0TOWp4g+ghajPEfXXwfspMvdGSfmh2AEXrsFmZg/lfWguKoyEGsGbZvUfT9F4loP7fmAO
        7A+k4Q7yRywOjOZBM1FjuFSXXCmT+k/HBVE0/ZwLAgSHpZtAOzME/oDXpYooPKoBo8wFHu3J6/dUkvLL
        toLMgBD4BC+xKjCdSEGskG26Gwq4MDvh95Ws/tLQMDuAN+DCL7GbGQJuGALJolB71B0OmNX/U5Qdv8Cc
        ExAC31F8YoJABvQWldqhM+BHLsSOuDYGVr+/QxgIAt9gFzMENsK5otZQqSG8xwXYDr+NmdUfHAJr8AIz
        BJZJPBCq8zeeV/q0xhUxtfqDQ2ApRSumeGAK1Bb1Bqc/Q74qusb4TqWFfeH7ArPNiSE3jJBi8mDUGw7y
        A5+nKPqOVQAYEYF1UHgQJ5iri/NgkMQDFVEPc4n3Hb7KvuKY5aIAeYE03Il/wSRzHeFdAgFrSoLrYTdX
        /2W4OSZ3fzU1FKh+6D9WWYFsGCz9BGaqBfeCiwvrZFwd8+ovTRC7AqaHzzRDoBgmSLWASs3hRSjigkrF
        f8a08VePiwM5g3OxhVV/4XxoK2ovpWrQDVabSz1T8IUYdv5CDwkP4asUx1gUs22GO6VwzGjxmATpVg1d
        T5FI40f9gUPCNDyAU60h4IZ5cAktgISlP8FD1r199SmEyokz9Qe2AgYE/oHHW7eyHIKXErHVvA699FjY
        aD7tN7gpvhx3qz8YBA7iW3hK4CbT1+GaxHALk6EhnAcPwEJIC9TcdQbOo8AqWup3H20Xdb56MA2X4qWB
        O40L4UtaEt3IHY77ELEW1Cc0N4FmxE193BxawQXQC4bAdPiKdvzfA4khGa/Gr7WrJDB7MAv30Oos1vqL
        BQFSQy78EW/HOhU1nOfTljgX/g63Qmc4E1qS5I4nbkbSbERSjeGykpr0kO2hPzwCU8ixWQnfwDoy8L/A
        BuKNsA0OQBZFv0E6+Zvg47g7inF/IS7GG/AcvIw8jgNaIVBEHozLEgI78cXAW4H/bLI8Wih7YAvFCptJ
        gutIoitJslNIwv1J0s1ix040hk7wMLxDis4Cb/iTd2pgd/yI1k701O/BBdj8mOX5G9kCt+bkUKZlr3Ea
        fooDyM0NW1ZekvQGshMjSPKVOrquIVxJIdwPkBvpVK5kPBcn476we3rD2/tdeJXfMzTEldrrDUr7C9Ms
        7MAucgm7hTaIpqIRNbkk/UnQnTQR9az9qTAMPufHtuFwdVL+U7g5ivt+2fr/FVsqjSYvYIkjR0V5FpbA
        aDD9FadhV0yJfGpZPmliGGkkKVp+/LnwjN2ZXIHmeFxJ8fFWnzqiHa55cAOLzCc4AgD/qQNppsETW8gS
        9McW9meUmYtNtpJW2joPgtPpZ3ZHqvhkTMWO+NjROR6Vc9gTTQD4wyCDzSQyZhF9hk/7JhHVjBQGu2Ei
        acgxSqUwblP4j1cLjyOjewnehVPwc/K6i6O651c+APxnEuUSFLJ8c8oMzvQFo9/gDHyAXOHWZBnrhG8T
        NsFgJ1JKSdAFlsORYJ58I2yFHfA68nLvxvvodf5GfB8OxSdwEs7CFfgzKT7fN6+rsvN8lQUAFQzlXOyb
        cFCAB8kf+hTn4PM4Cof45HcvDsI78EZyWc/HE7GBMqXIko/AMuisdzNoQNHnwYocuRPwChyOr9Ojb8H9
        hOlcepXSUWyFvqxeiY/Lx7RVPscCAKyjE2O4lde3MeaRZXD5isv2k4XYjptwLS7Bl2hJdaZnr17xBMOH
        SWua6Ax4L9DaTyKjfhNOpwdLowcuV3Hs5/FjFQBW84oyfTAom2BoVB9tJb/heexTkft4BN4lzWmgbuYW
        jbJizQspgPuBdrOKJ/EJACLfKgpIyi7T6LrduAZHY/vAzuNa0l6EId/N1j5/TbyMXJZdPoMVn6d28QSA
        MlvA08tpvohiPW0KHQN5BrtJg2GXoFaHe47NvFG4Lb5Me5InLqr1qg4ASkGQbZlU+hmfI61YQiCTtFg9
        PPU/CHnmL0zFYfiLIzO5BAChcb5FDbJhC76niKGR9V0nD9iHQDLca6X+DriQHiDelR/fAAh01ujCfTjb
        qifRgMA9djeCAZBlTuTcSWs/Wnu+095FtAGg+33yLcpOSu3ALVZOYRbcakf9V8Je/hUNcBz9pCdq6zOT
        XMx9Dk4AjCYAjATPXnofvXONrCeVuHAbjrS652APdA9V/WfBv81jmWYQ5txRM3HL8Ho8nQKcx3CHQ78a
        PQC4KWofgefR+9yIK6PQl5hGC2ey1XD7n0izIVAjWMA/2gLnRHEskweX44nHfrs/vZI7jgHgxv3Y16/T
        Se+EI+thNUYJ6oxjxS5+PD/4KUEyjOK9+c1J/cVRLNLMwn7KRMB5jgyGiBYAvPhPZU8eoL3cPccSAofw
        NXN7+n/hiWDOYHfepNEQX4/qUDYP7sazlCcY4jsqiVcAFFJw5v8r55E3oFua2QEK0aeQ58Yg4KrYE2gK
        q7jn/3QU9/5SC7BPnbmLXell3HEKADepoSObdHRQ+9sUkdW09gVGkQYZBFaRlgPSw/Cb+tf/ghlRTvW6
        MRdvYyOhNzgQC0QHAB78ie3Fg2hBOeE2Z1hCYDuTpa8t9eFA6m8D2/lcri2VkPTx4iQ2F/g9B7yA6ACg
        BN9W1mAymWVnYo0Cy3YUoxOhA4fANjjHukf3Jd6g9VGlzOXyUhCoxrGj4tYCuPER5lF94phMrRvUXeRE
        mxpTJ1s1pF6olnwk4aOV1Jztobj5VOWB+/ju/Ys/ALhpVV6j/MZZuMNBm2rtDO4nN5oNqjlA2jat/5dV
        lFxIaqicnL+b1N1LeZbTcJv2Z4kGADy4CU9SfuNGUpJzi6owwDawlmIPZgOmchtwDuzx/wu1KfirvCMf
        Dz6uPO5xuFy74YwGALz4Iav7f9LhTTXQNvASjwb2cD9glIqQKx0IVuy4TnNZ18zEuASAB8eyoRcLHAaA
        9cSyNNzMh9f+jzSuxP8/qH737Eody+rB/7C5Ov2158+cB4CR0+yj/EIr32mq09UCVjYgHV/ljWjf++cD
        +oLb/z92JsehMgu93PQS6ni1Mymi9cQZADwURKt9wNdGJatibQM28ZsMisvnl1eD6ertu5NjoOTjIeYF
        rNBsk5wHgBcXYT3lFx6PyrLKD+AHPM0riP9Rdi5wAvzi/x9OcSTzFlkCRb8XEA0LMEb5/rqOJLRCzQq6
        8GsWkcDGsgutrlUn9P05ytl/a+Gtc9gLcBoARjDbm3kAP0dpYeUGOBm4lQ+luboUAGPV45+3YmAuv+EF
        dHXUC3AaAEb7eetK8ABK8wEuS0dwOi8WG2Oovx4sUYez/hIjRZ/DHc0FOA0ALy5kOYCRUbSr1sVi3+Kf
        VAAsNgZVtlaPgPpoH5USrhfwFvMCxseZBRgVhSMte5vATrJC7FjoZIBrINf/D0fHyPo3cgEt0TloOgsA
        4xTgauXbT4qqZS0IEAmoR1OkefIChvk3ftbBd2PkZh6nRegsAAwnVoVvbwcOtOxGAuk4U00HHYahANP8
        H7MZ/hgzbR9ufIIZ0XlaVeQkAEpwFnO4xkdZrlmWFuBTbMJzAaoLeE5U5/TZPUoZHjc+QCHe7/hxVrBS
        USsvYAOewd1AWKseAtm/nsXjezWvAwe2W/E0VFPU+o6onASAUQp+EaoLa6fW7Su4xPMta4W34uUqAH4E
        9Y6eAbaHNLtxPT6Lg+mf9Zr3ODdm402oblDfaROjkwDw4hesCuc2zNMmnVKJDwki8QJLAOxRSu6JdwLk
        +P/BfWS87D3MymNtyefivzRbAS+9ZJIyimaaNiU5C4DJSt49GV/StgH4S7wtSdxtKxl0AP/C7y9Sx7uO
        sKVCo4Tb/5y5C/1/t1YArMaGygPfpS1N7RwAjLrmAezewy81AcCNexWJXx7w3LYoQHXQgyoAPKAWgj9u
        SwheXKUoqA7O1erquMlktWejKXZpsjLOAcCD29lFURdrO1734hwlkGtIS8RrKxAczovE1YmfT9gEwDI2
        9PhGzXnEAryHedPLNEHMOQCYo5fBmnqbeNuccbPKclsAyGDH7PA7wGH/P3jElng9uJndkNs4ICLDjadn
        snh6dMxbgGJ8FNX6yjnaoLWaOZenB7xVMdCh8BA+lh4KVKzaXaGDWb3pA/RnTiaEr9R0j6hTAHCTmDuj
        M8drBSRdYLalwFYu8BDerX5DAcAB/z+402a4YsZka1ynMRZw02tcx3qV9eQqnQKAF79mvfk3aCoFN9LL
        rUO2t0WWk4T24i0qAPYBbPT/g542z6yNsoe+bHTkWM3poPFsKul0LZuMcwB4UQkBkyiU1bUpPskaPK6v
        4HyhyHKEzHZ2vgIbAD7x/4MLbAdyXnyb1Zu21dpR6MWPWSg4UMuNYs4AwEhe3chW6ReaAPsrtmG+RUW1
        20UWeYA02ozaqQD4GGCW2olrt2zJCNXUu7Cq4QtaN4F9rL3xNBKFJ0YB4MGNrPKuk6b0tYekWo217lY0
        aaDQ8qaSb/jckJkAo/3v8KqPS23j1YOT2aNdpC1aL8XyEIZ8HdkGZwDgxTdZ1PKopo1wF1sG1XCK7bOA
        dHxXrVP+3WgPuQkK/Xes522Lwah/b8MGyc7Qugm8x65as5uwjhYA3CR2NdVaDxdr2QC8JNGatjbaXMs0
        0HjViyiAfsZUgIjigFIezcKTyzW2lhgAO52NWdkd8bc7AQAjB3i28p1ttJwC8pS7wWOCfCY7lBhgv9Eh
        mAprIk22GgHKKcxMz9R4/JGHd7D815KIv90JAHjxA6yrfOfdWrIiXpKmWh95SpBg26pH0BgrrU5fgs+M
        qWFJMFUV7tIwhFvEq82wq0Yb4MU3mAEcEZNbQCE7ajFygF4NC2A/P8Unz6LIdmG4yQNAmFJ6r8hAng4O
        R5w/Mu/XsAH6zu65b90h4llb+gHgIXPfzpF4hVXykSzWBvle6zbxB3ka+Naym8D2qaMhwtlhC3EYQ2kn
        bQPR3JiD/TUfCukHgLkT4HYNZSDGAXAnJtnhQZ3gbMtyMJYD2AunlQKgNsxXe9jCqQz24nd+8z1LY4Fp
        2myAF//B7sh5JOa2AB6u1qSNS0e4yvt5TiRJe4MsxnSLDeAN3iD+Pmn+KN2jVgXcHFb22nww1EFbO5cH
        /83gdXGExSe6AeAm5/k8dgi0MeK3N+IKPuVrSFDHMs/iUoldeD2fGvrX8vkAp8IO9RbvcA51PfgDvbSa
        rJiosT6wH9sElka0vnQDwIvz2QagJ2U9kSXZTg7hMCzLYv0vwlQVANtJ634jol7hAyLDefgiHMnQeiaF
        Hh5Nm8B0tgkMjajMQjcACthI2Jr4poZQdT2rLTJqtoqCPonLohh0IB8TNV0dE3WF2iDWBD8OywZsMD3w
        CA1ZuzJhtFK++dyIkix6AWAkq9QY+1TcFDH0C3j9Dkk3+LaSbbH+F/L1n0saVygFFgE7xU4Py4A9xeZQ
        tMA1WlJCRiRwC+sUiqSNTS8AvKZW1jsjjgC8+DmbkZBMz1gcxvrfhj35+v8Q6vJJgX3VMRF1yWv0hLUS
        +Ey6WzR1xRnpoBqmubvuGACAUQc80MZRbaiVFjczSbYPYXZjtsUZ4FR2lkKa7mueFFoPFvPL4cLZv930
        czXYcLQ5mmp4NrPGplMj8LN1AsCIUVqxM4BIR1t6CEIpzKt4OSjczevfhV+x8wniRaRtC2KN4oYZsz/T
        wji46MZ+8FJNA1IL8F4WZUwNe53pBcDzbOMbEqHn4yGJsale2D1oct18ApBG33MLV38OadqSasJrwAzZ
        i2F42l58nxWLJ+NoLa6gOdd2TdglovoAYJSBdtWcpywkiSWz7/wg6Hea4/+D5JPV5gB4jTQdgNrCVn5d
        zCLba9eoXr/NdOvQai3HIntYWqQRrgrze/UBwOiOUG/muAwPROT1GA03JzAJ3h40OWdl/ueYr43ZCm0q
        ujPkPigB1tdqv63JqIxtxX64l6bLn/7OvvehMLMB+gBQyIq1k2jVuSOC+UGT134SfhNEC2bz78IVvBnc
        OAC6r+I7g+rDO/yuqUtwrW0IFOE4ZsJq4guaiq5VtZ0d5ombLgB48GfWxN4y4sL151j2vxqODwrzbJP6
        P2dX7/h4rrX7509nwwb+sS7k5XpsimWn6QyrFT2SJ+JNgFfdViffuHIBwB3AyFLARvTPrWfnoCmvXLb7
        u3ANu6vIx+tDuzmwF2Twj3bEb21DYIHpKuNrKULwRGwDeBl617DqbvUAwIh5OmqcB+qh7+vBpNaIXN+K
        pZbPdn8XfswGVPg4gzQb4sXRw8HDP94Ol6Od2wONQi7eyFQdx0R8C4lhW85jhZcLwkxbRw4AL85jRWAX
        RVAF4SbpjGYnHkb7V8U5RVX9hiV4jzw3k/o9MCz0C6TrwHP8/jDjHPoVzLGxgj34C57PvqMxBTORZwR4
        CWo4lzHqAIAR79zIHMAJEQDcQwE0v9/ngiBnCqr6XbibfK0WZvX/F54tP/0PhRrC6/79AmVr7X5yubwh
        v6IH3zVdXdg2DJfSXH72J3a91eowuhkiB4CX/OxU1hn5n7AB7sWfjs3+KO//f6/C78vzU3+a73KYQcwi
        +fgP0mYDsEmN4W11dkBZTPABuRzeEFdILm9H9g183BuhFchnUwOMUwG7Ry+RA8A4nuL5jgfDTnh5cA+7
        XsKwJ0MreK8ixfVz0ednWfn9hvrfgiYQBjWBN8wbgXGR/CByCYtCUqIx6YtHA8nkG2RGmCj5F3Mwj7fd
        gRc5AIx0jTp1rwl+FqZ1M45+HuDz/Mn7D3yiUEjbT9ox5R8kG3i71aXxxgyQmeGpv/Qm8SnqDKHyxMRj
        FBoWhrAdeEhZLZGnmCdGNOvHEBcrcMK/2fzGSAFgWLe72DPcHGYjuNFRNMGUsj2RfHlPwKxfxlGzn44H
        KOQbysdAl7EXJge/MbwiqguPqXPE/Pe7oYT4DN+8OneFSaEXTS/XEKcTfCKJluezGvfmFD97owgAo2u5
        KbOM4bWruEkS00y+Um2cElCeObTmjR0/HXfgRwT9k6yVbxz7PGo+97dL1aA/bAnwA2T0euHLZAsyfcML
        DSC4LdfrPfzqQvrkmxHcSm5MEu5pO1uuDwDGO/VHXkITzsbmJinMNPn+SSQx628rINOfTsrfQet+El7D
        K338+Ve4yeqG0HDofFhMgUSAH6pGJv46HIsfUth3kAyjhwRZQnAo58MUnPQwfa4Zvkqvo/7N0PkI2YD6
        bAUuoF8K9fOH6WnVVuln8Dcbn57HLJCx/o/YfosSksCrzJIY3IMkdpj9zRKyFIdwC36Hc3AkXo0nsHJR
        FvYtgvagkVJhpNo+YuYU2rUuw4H4MD6LM3A2BTALCRSlvATHWbgojXAMLjr2d+zxInzLdNTRkX4z1O9b
        TJtQI1b9sCTk337XlGk7h954URhvMcaULzWOfsf5PctCeqvZBJOJFFHdhBdTlJ+CFWsC9tPG3Qg0UxJc
        BB9AMWAoXIP2sLq0RvzZCq/V2d+xxzVMhjPFxqfrsm2ppo3Pppi2tBphvkN1S5vKn7S25d+zZDfMh0tL
        e/70Uz24Gb5SOwmFY4iPkHYGBj/vi4yawl/hG+vgULgSuYS0ci80g6hQExgASyBLxB4jnEXauMP/Ktho
        UAp0hPGEunxRQCVyPvwAE0gTKVBJlApXwGhYBnvUrgJhh7mIJL4M/g7dwk/z6rUGreE6GAGvwApYDwcg
        E/KgkB7SDR5iN3cbjRghkbkWRRyca5n9/MPH5FdE0swjqR4g6a4gKT9E0j658lZ9RaUk9WgnOgnaQRe4
        GnrCDdCP+HqY5F9qWhNvwwn4VALzSIroOQ/FXmpYW0JSu94nvxtIkleTRNuRZJuShJMh7qiXf/6gDj6D
        X+OXCcwf4WwTz8XhandhcagFXPFAfcmM+R1zTCAhfJ6wvAYX4z/xLcazcZgKALdV/54AQAAgABAACAAE
        AAIAAYAAQAAQnwCogxPxK/wigXkJvm1iUxhYdQFQi7A+x0IEicPTaAk8w3gS3qG2hFZdACRhPUzFRgnM
        DfE4bGBiVqBSdQEgHGJljwBAACAAEAAIAAQAAgABgABAAFBlAFAT78TnKO5NXH4ax5p4HN5ahfMAffwL
        QlJwEf7ma3VKTD7s6+3lnI1z1NEOVQoAnSDPvyHsU21XysUn51he6vh2FQZAY/i8/NW6RThHUwAQj9QF
        1pfd+vlJgqs/MQFgXE43+LpvJ+PGhFd/ogIAJkPJOK/GS6UFAHFGhVA8TpSfwAAohuLxonwBgLAAQAAg
        ABAAJB4AtoNnnISACQwASNo5KS/Bk8CJC4DqcC3MOnPXn/GjiG8MEADEI90JmWWj3d8UC5BwADgRNvpf
        +rw9wfOBiQeA7lDoPwdzhRwHJxgAlIqgFJwvABAACAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAA
        CAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAA
        CAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAA
        CAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAACAAEAAIAAYAAQAAgABAACAAcBsBCPEIQSBR2BwRA
        GrpI8aWchXMSBQC18Qlcgh8mCK/CvSYI5BxV/3ZciXOP8jx8CGslBgCSCAL1EoYb4mW41AIAabgGe2Mq
        2cMyrk2SSQgAJB6fhT8pl+XmkPo341UVf0oAUJX4aQaAdDL6KQkEgF5QnNgA6La2YLx7XPH4Us4Zn/3k
        oOVJf1T4mWLoWXUA0A5ciQ0AeGw25JFOSzkHngfoEWRRuEhqVYZqw2sJrf7N0MYkk1RYVuFnZpDUqhC1
        JAi4CPOeBGM35MNXcJWlTM6B+ZBFf4N/ppgkNYMkVsWoNpm03tAvwfgG6AJNAsqkHnQgV49/pjdJqjYI
        CQkJCQkJCQkJCQkJCQkJCQkJCQkJCQlpoP8DoXZr+Ob7UfMAAAAASUVORK5CYII=
</value>
  </data>
</root>